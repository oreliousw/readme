// (c) Mr O - Market Emotion Strategy v1.5 (Multi-TF Panel, Clean Compile)
//@version=5
strategy("MES v1.5", overlay=true, initial_capital=620, default_qty_type=strategy.percent_of_equity, default_qty_value=50, pyramiding=0)

// --------------------------------------------------
// INPUTS
// --------------------------------------------------
volLen   = input.int(20, "Volume SMA Length")
rngLen   = input.int(14, "Range SMA Length")
showBg   = input.bool(true, "Show Background Mood")
showLbls = input.bool(true, "Show Emotion Labels")
showVolC = input.bool(true, "Color Volume Bars")
showDock = input.bool(true, "Show Dock Panel Summary")

// --------------------------------------------------
// CALCULATIONS
// --------------------------------------------------
trNow    = ta.tr(true)
volSMA   = ta.sma(volume, volLen)
rngSMA   = ta.sma(trNow, rngLen)
volRatio = nz(volume / volSMA, 0)
rngRatio = nz(trNow / rngSMA, 0)
isBull   = close > open
isBear   = close < open
bodyRatio = math.abs(close - open) / nz(trNow, 0.0001)  // Avoid division by zero

// --------------------------------------------------
// EMOTION STATES (tunable thresholds)
// --------------------------------------------------
fear         = isBear and volRatio > 1.2 and rngRatio > 1.1
capitulation = isBear and volRatio > 2.0 and rngRatio > 1.5 and close > low[1]
hope         = isBull and volRatio > 0.9 and rngRatio < 1.0
confidence   = isBull and close > close[1] and high > high[1] and volRatio > 1.1 and rngRatio > 1.0
greed        = isBull and volRatio > 1.8 and rngRatio > 1.3 and bodyRatio > 0.8
indecision   = rngRatio < 0.7 or (math.abs(close - open) < (trNow * 0.25))
neutral      = not (fear or capitulation or hope or confidence or greed or indecision)

// --------------------------------------------------
// VISUALS: BACKGROUND (global-scope call)
// --------------------------------------------------
bgColor = fear         ? color.new(color.red, 75) :
          capitulation ? color.new(color.maroon, 70) :
          hope         ? color.new(color.green, 80) :
          confidence   ? color.new(color.lime, 70) :
          greed        ? color.new(color.yellow, 70) :
          indecision   ? color.new(color.gray, 85) :
          neutral      ? color.new(color.silver, 85) : na
bgcolor(showBg ? bgColor : na)

// --------------------------------------------------
// VISUALS: LABELS ON MOOD CHANGE (ASCII only)
// --------------------------------------------------
var string lastMood = ""
mood = fear ? "Fear" :
       capitulation ? "Capitulation" :
       hope ? "Hope" :
       confidence ? "Confidence" :
       greed ? "Greed" :
       indecision ? "Indecision" :
       neutral ? "Neutral" : "Unknown"
newMood = mood != lastMood
if showLbls and newMood
    label.new(bar_index, high, mood, style=label.style_label_down, textcolor=color.white, color=color.new(color.black, 60), size=size.tiny)
    lastMood := mood

// --------------------------------------------------
// VISUALS: VOLUME COLUMNS COLORED BY MOOD (global-scope call)
// --------------------------------------------------
volCol = fear         ? color.red :
         capitulation ? color.maroon :
         hope         ? color.green :
         confidence   ? color.lime :
         greed        ? color.yellow :
         indecision   ? color.gray :
         neutral      ? color.silver : color.gray
plot(showVolC ? volume : na, style=plot.style_columns, color=volCol, title="Emotion Volume")

// --------------------------------------------------
// HELPERS (bool NA-safe)
// --------------------------------------------------
bnz(b) =>
    // Return false if series<bool> is na, else the bool itself
    not na(b) and b

// --------------------------------------------------
// STRATEGY LOGIC
//   Long: Fear/Cap -> Hope/Conf
//   Short: Greed -> Indecision/Fear
//   Exit: opposite mood
// --------------------------------------------------
wasFearOrCap  = bnz(fear[1]) or bnz(capitulation[1])
wasGreed      = bnz(greed[1])
toHopeOrConf  = (hope or confidence) and wasFearOrCap
toIndecOrFear = (indecision or fear) and wasGreed

if toHopeOrConf
    strategy.entry("Long_Emotion", strategy.long, comment="Fear->Hope/Confidence")
if toIndecOrFear
    strategy.entry("Short_Emotion", strategy.short, comment="Greed->Indecision/Fear")

longExit  = strategy.position_size > 0 and (greed or indecision)
shortExit = strategy.position_size < 0 and (hope or confidence)
if longExit
    strategy.close("Long_Emotion", comment="Long Exit: Opposite Mood")
if shortExit
    strategy.close("Short_Emotion", comment="Short Exit: Opposite Mood")

// --------------------------------------------------
// DOCK PANEL SUMMARY (top-right)
// --------------------------------------------------
var table dock = na
if showDock
    if na(dock)
        dock := table.new(position.top_right, 1, 1)
    table.cell(dock, 0, 0, str.format("Mood: {0}\nVol Ratio: {1}x\nRange Ratio: {2}x", mood, str.tostring(volRatio, "#.##"), str.tostring(rngRatio, "#.##")), text_color=color.white, bgcolor=color.new(color.black, 70), text_size=size.small)
